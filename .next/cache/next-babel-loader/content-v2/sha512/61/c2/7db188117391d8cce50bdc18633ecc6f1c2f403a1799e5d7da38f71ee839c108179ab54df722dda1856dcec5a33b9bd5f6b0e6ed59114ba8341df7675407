{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\"; // components\n\nimport PageLoader from \"../../../src/components/global/PageLoader\";\nimport PageLayout from \"../../../src/components/local/services/feedback/PageLayout\"; // API Calls\n\nimport { fetchFeedbackById } from \"../../../src/utils/Apicalls\"; // utils\n\nimport { cryptData } from \"../../../src/utils/utils\";\n\nconst Feedback = () => {\n  const router = useRouter();\n  const {\n    0: isPageLoad,\n    1: setIsPageLoad\n  } = useState(true);\n  const {\n    0: feedbackContent,\n    1: setFeedbackContent\n  } = useState(null);\n  const {\n    0: isSurveyClicked,\n    1: setIsSurveyClicked\n  } = useState(false);\n\n  const getFeedback = async () => {\n    setIsPageLoad(true);\n    const {\n      c,\n      ct,\n      f\n    } = router.query;\n    const c_id = await cryptData(\"dec\", c);\n    const fc_id = await cryptData(\"dec\", ct);\n    const fdq_id = await cryptData(\"dec\", f);\n    await fetchFeedbackById({\n      c_id,\n      fc_id,\n      fdq_id\n    }).then(resp => {\n      console.log(resp);\n      if (resp.status === 200) setFeedbackContent(resp.data);\n    }).then(() => {\n      setIsPageLoad(false);\n    }).catch(() => {});\n  };\n\n  useEffect(() => {\n    if (!router.isReady) return;\n    getFeedback();\n  }, [router.isReady]);\n  return isPageLoad ? /*#__PURE__*/_jsx(PageLoader, {\n    typeT: \"Bars\",\n    visibleT: true\n  }) : /*#__PURE__*/_jsx(PageLayout, {\n    feedbackContent: feedbackContent,\n    survey: {\n      isSurveyClicked,\n      setIsSurveyClicked\n    }\n  });\n};\n\nexport default Feedback;","map":null,"metadata":{},"sourceType":"module"}