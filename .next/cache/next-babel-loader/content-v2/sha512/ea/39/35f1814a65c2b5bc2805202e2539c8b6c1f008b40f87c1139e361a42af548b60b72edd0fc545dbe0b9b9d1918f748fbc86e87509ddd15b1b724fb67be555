{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/pages/services/feedback/[...all].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\"; // components\n\nimport PageLoader from \"../../../src/components/global/PageLoader\";\nimport PageLayout from \"../../../src/components/local/services/feedback/PageLayout\"; // API Calls\n\nimport { fetchFeedbackById } from \"../../../src/utils/Apicalls\"; // utils\n\nimport { cryptData } from \"../../../src/utils/utils\";\n\nvar Feedback = function Feedback() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(true),\n      isPageLoad = _useState[0],\n      setIsPageLoad = _useState[1];\n\n  var _useState2 = useState(null),\n      feedbackContent = _useState2[0],\n      setFeedbackContent = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSurveyClicked = _useState3[0],\n      setIsSurveyClicked = _useState3[1];\n\n  var getFeedback = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _router$query, c, ct, f, c_id, fc_id, fdq_id;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsPageLoad(true);\n              _router$query = router.query, c = _router$query.c, ct = _router$query.ct, f = _router$query.f;\n              _context.next = 4;\n              return cryptData(\"dec\", c);\n\n            case 4:\n              c_id = _context.sent;\n              _context.next = 7;\n              return cryptData(\"dec\", ct);\n\n            case 7:\n              fc_id = _context.sent;\n              _context.next = 10;\n              return cryptData(\"dec\", f);\n\n            case 10:\n              fdq_id = _context.sent;\n              _context.next = 13;\n              return fetchFeedbackById({\n                c_id: c_id,\n                fc_id: fc_id,\n                fdq_id: fdq_id\n              }).then(function (resp) {\n                console.log(resp);\n                if (resp.status === 200) setFeedbackContent(resp.data);\n              }).then(function () {\n                setIsPageLoad(false);\n              })[\"catch\"](function () {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFeedback() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!router.isReady) return;\n    getFeedback();\n  }, [router.isReady]);\n  return isPageLoad ? /*#__PURE__*/_jsxDEV(PageLoader, {\n    typeT: \"Bars\",\n    visibleT: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this) : /*#__PURE__*/_jsxDEV(PageLayout, {\n    feedbackContent: feedbackContent,\n    survey: {\n      isSurveyClicked: isSurveyClicked,\n      setIsSurveyClicked: setIsSurveyClicked\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Feedback, \"TiDRKYDSiuIATenOuKep6hubHO8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Feedback;\nexport default Feedback;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"sources":["/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/pages/services/feedback/[...all].tsx"],"names":["useState","useEffect","useRouter","PageLoader","PageLayout","fetchFeedbackById","cryptData","Feedback","router","isPageLoad","setIsPageLoad","feedbackContent","setFeedbackContent","isSurveyClicked","setIsSurveyClicked","getFeedback","query","c","ct","f","c_id","fc_id","fdq_id","then","resp","console","log","status","data","isReady"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,OAAOC,UAAP,MAAuB,4DAAvB,C,CAEA;;AACA,SAASC,iBAAT,QAAkD,6BAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACnB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADmB,kBAEiBF,QAAQ,CAAU,IAAV,CAFzB;AAAA,MAEZS,UAFY;AAAA,MAEAC,aAFA;;AAAA,mBAG2BV,QAAQ,CAAM,IAAN,CAHnC;AAAA,MAGZW,eAHY;AAAA,MAGKC,kBAHL;;AAAA,mBAI2BZ,QAAQ,CAAU,KAAV,CAJnC;AAAA,MAIZa,eAJY;AAAA,MAIKC,kBAJL;;AAMnB,MAAMC,WAAW;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBL,cAAAA,aAAa,CAAC,IAAD,CAAb;AADgB,8BAEKF,MAAM,CAACQ,KAFZ,EAERC,CAFQ,iBAERA,CAFQ,EAELC,EAFK,iBAELA,EAFK,EAEDC,CAFC,iBAEDA,CAFC;AAAA;AAAA,qBAGGb,SAAS,CAAC,KAAD,EAAQW,CAAR,CAHZ;;AAAA;AAGVG,cAAAA,IAHU;AAAA;AAAA,qBAIId,SAAS,CAAC,KAAD,EAAQY,EAAR,CAJb;;AAAA;AAIVG,cAAAA,KAJU;AAAA;AAAA,qBAKKf,SAAS,CAAC,KAAD,EAAQa,CAAR,CALd;;AAAA;AAKVG,cAAAA,MALU;AAAA;AAAA,qBAOVjB,iBAAiB,CAAC;AAAEe,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,KAAK,EAALA,KAAR;AAAeC,gBAAAA,MAAM,EAANA;AAAf,eAAD,CAAjB,CACDC,IADC,CACI,UAACC,IAAD,EAAU;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAIA,IAAI,CAACG,MAAL,KAAgB,GAApB,EAAyBf,kBAAkB,CAACY,IAAI,CAACI,IAAN,CAAlB;AAC5B,eAJC,EAKDL,IALC,CAKI,YAAM;AACRb,gBAAAA,aAAa,CAAC,KAAD,CAAb;AACH,eAPC,WAQK,YAAM,CAAE,CARb,CAPU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXK,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAkBAd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACO,MAAM,CAACqB,OAAZ,EAAqB;AACrBd,IAAAA,WAAW;AACd,GAHQ,EAGN,CAACP,MAAM,CAACqB,OAAR,CAHM,CAAT;AAKA,SAAOpB,UAAU,gBACb,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,QAAQ,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,WADa,gBAGb,QAAC,UAAD;AACI,IAAA,eAAe,EAAEE,eADrB;AAEI,IAAA,MAAM,EAAE;AACJE,MAAAA,eAAe,EAAfA,eADI;AAEJC,MAAAA,kBAAkB,EAAlBA;AAFI;AAFZ;AAAA;AAAA;AAAA;AAAA,WAHJ;AAWH,CAxCD;;GAAMP,Q;UACaL,S;;;KADbK,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\n// components\nimport PageLoader from \"../../../src/components/global/PageLoader\";\nimport PageLayout from \"../../../src/components/local/services/feedback/PageLayout\";\n\n// API Calls\nimport { fetchFeedbackById, submitFeedback } from \"../../../src/utils/Apicalls\";\n\n// utils\nimport { cryptData } from \"../../../src/utils/utils\";\n\nconst Feedback = () => {\n    const router = useRouter();\n    const [isPageLoad, setIsPageLoad] = useState<boolean>(true);\n    const [feedbackContent, setFeedbackContent] = useState<any>(null);\n    const [isSurveyClicked, setIsSurveyClicked] = useState<boolean>(false);\n\n    const getFeedback = async () => {\n        setIsPageLoad(true);\n        const { c, ct, f } = router.query;\n        const c_id = await cryptData(\"dec\", c);\n        const fc_id = await cryptData(\"dec\", ct);\n        const fdq_id = await cryptData(\"dec\", f);\n\n        await fetchFeedbackById({ c_id, fc_id, fdq_id })\n            .then((resp) => {\n                console.log(resp);\n                if (resp.status === 200) setFeedbackContent(resp.data);\n            })\n            .then(() => {\n                setIsPageLoad(false);\n            })\n            .catch(() => {});\n    };\n\n    useEffect(() => {\n        if (!router.isReady) return;\n        getFeedback();\n    }, [router.isReady]);\n\n    return isPageLoad ? (\n        <PageLoader typeT=\"Bars\" visibleT={true} />\n    ) : (\n        <PageLayout\n            feedbackContent={feedbackContent}\n            survey={{\n                isSurveyClicked,\n                setIsSurveyClicked,\n            }}\n        />\n    );\n};\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}