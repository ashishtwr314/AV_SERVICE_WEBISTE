{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/src/components/local/services/feedback/PageLayout.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { message, Result } from \"antd\";\n// config\nimport { DOMAIN_URL } from \"../../../../../config/index\";\nconsole.log(\"DOMAIN URL\", DOMAIN_URL); // components\n\nimport Feedback from \"../feedback/components/Feedback\"; // utils\n\nimport { SC } from \"./utils\";\nimport { submitFeedback } from \"../../../../utils/Apicalls\";\nimport router from \"next/router\";\nimport { cryptData } from \"../../../../utils/utils\";\n\nconst Header = ({\n  companyInfo\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"d-flex align-items-center text-dark text-decoration-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo-size\",\n            src: companyInfo === null || companyInfo === void 0 ? void 0 : companyInfo.c_logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fs-4\",\n            children: [companyInfo === null || companyInfo === void 0 ? void 0 : companyInfo.c_name, \" - Feedback Surveys\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nconst FeedbackDescription = ({\n  feedbackInfo,\n  survey,\n  submitedStat\n}) => {\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState(typeof feedbackInfo.q_format !== \"undefined\" && feedbackInfo.q_format !== \"\" ? JSON.parse(feedbackInfo.q_format) : []);\n\n  const f_questionEditor_cust = (uuid, type, value, option) => {\n    if (value) {\n      setAnswered(true);\n    } else {\n      setAnswered(false);\n    }\n\n    console.log(uuid, type, value, questions, option);\n    const result = SC.fc.f_questionEditor(uuid, type, value, questions, option);\n    setQuestions(result);\n  };\n\n  const {\n    0: userData,\n    1: setUserData\n  } = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const {\n    0: startTime,\n    1: setStartTime\n  } = useState(null);\n  const {\n    0: answered,\n    1: setAnswered\n  } = useState(false);\n\n  const handleSubmit = () => {\n    const handleFeedbackSubmit = async () => {\n      const {\n        c,\n        ct,\n        f\n      } = router.query;\n      const c_id = await cryptData(\"dec\", c);\n      const fc_id = await cryptData(\"dec\", ct);\n      const fdq_id = await cryptData(\"dec\", f);\n      const endTime = new Date().getTime();\n      const time = endTime - startTime;\n      let sec = Math.floor(time / 1000 % 60); // console.log(\"Time taken\", sec);\n\n      const formData = new FormData();\n      formData.append(\"c_id\", c_id);\n      formData.append(\"fc_id\", fc_id);\n      formData.append(\"fdq_id\", fdq_id);\n      formData.append(\"fdqa_time_taken_to_finish\", JSON.stringify(sec));\n      formData.append(\"fdqa_qst_ans_json_format\", JSON.stringify(questions));\n      formData.append(\"name\", userData === null || userData === void 0 ? void 0 : userData.name);\n      formData.append(\"email\", userData === null || userData === void 0 ? void 0 : userData.email);\n      console.log(formData);\n\n      try {\n        const res = await submitFeedback(formData);\n        console.log(\"RES\", res); //     {\n        //     c_id: parseInt(c_id),\n        //     fc_id: parseInt(fc_id),\n        //     fdq_id: parseInt(fdq_id),\n        // name: userData?.name,\n        // email: userData?.email,\n        //     fdqa_time_taken_to_finish: sec,\n        //     fdqa_qst_ans_json_format: questions,\n        // }\n\n        submitedStat.setIsSubmitted(true);\n      } catch (err) {\n        var _err$response$data, _err$response$data$me, _err$response$data2, _err$response$data2$m, _err$response$data3, _err$response$data3$m, _err$response$data4, _err$response$data4$m;\n\n        ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$me = _err$response$data.message) === null || _err$response$data$me === void 0 ? void 0 : _err$response$data$me.email) && message.error((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : (_err$response$data2$m = _err$response$data2.message) === null || _err$response$data2$m === void 0 ? void 0 : _err$response$data2$m.email[0]);\n        ((_err$response$data3 = err.response.data) === null || _err$response$data3 === void 0 ? void 0 : (_err$response$data3$m = _err$response$data3.message) === null || _err$response$data3$m === void 0 ? void 0 : _err$response$data3$m.name) && message.error((_err$response$data4 = err.response.data) === null || _err$response$data4 === void 0 ? void 0 : (_err$response$data4$m = _err$response$data4.message) === null || _err$response$data4$m === void 0 ? void 0 : _err$response$data4$m.name[0]);\n      }\n    };\n\n    handleFeedbackSubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-5 fw-bold\",\n        children: feedbackInfo === null || feedbackInfo === void 0 ? void 0 : feedbackInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"col-md-8 fs-4\",\n        children: feedbackInfo === null || feedbackInfo === void 0 ? void 0 : feedbackInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), !survey.isSurveyClicked ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault;\n          console.log(\"take survey\");\n          setStartTime(new Date().getTime());\n          survey.setIsSurveyClicked(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputUserName\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"inputUserName\",\n            \"aria-describedby\": \"input-user-name\",\n            placeholder: \"Enter name\",\n            required: true,\n            onChange: e => setUserData(s => _objectSpread(_objectSpread({}, s), {}, {\n              name: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputUserEmail\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"inputUserEmail\",\n            \"aria-describedby\": \"input-user-email\",\n            placeholder: \"Enter email\" // required\n            ,\n            onChange: e => setUserData(s => _objectSpread(_objectSpread({}, s), {}, {\n              email: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          type: \"submit\",\n          children: \"Take Survey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <button\n      //     onClick={() => {\n      //         console.log(\"cancel survey\");\n      //         survey.setIsSurveyClicked(false);\n      //     }}\n      //     className=\"btn btn-danger btn-lg\"\n      //     type=\"button\"\n      // >\n      //     Cancel Survey\n      // </button>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), survey.isSurveyClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid py-5\",\n      children: /*#__PURE__*/_jsxDEV(Feedback, {\n        setQuestions: setQuestions,\n        answered: answered,\n        setAnswered: setAnswered,\n        questions: questions,\n        f_questionEditor_cust: f_questionEditor_cust,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nconst PageLayout = ({\n  feedbackContent,\n  survey\n}) => {\n  const {\n    0: isSubmitted,\n    1: setIsSubmitted\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      companyInfo: feedbackContent === null || feedbackContent === void 0 ? void 0 : feedbackContent.companyInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 mb-4 rounded-3 shadow-lg\",\n      children: !isSubmitted ? /*#__PURE__*/_jsxDEV(FeedbackDescription, {\n        feedbackInfo: feedbackContent === null || feedbackContent === void 0 ? void 0 : feedbackContent.feedbackInfo,\n        survey: survey,\n        submitedStat: {\n          isSubmitted,\n          setIsSubmitted\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Result, {\n        status: \"success\",\n        title: \"Feedback has been Successfully Submitted!\",\n        subTitle: \"Thanks for completing this Feedback. Now create your own \\u2014 it's free, easy, & beautiful\",\n        extra: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: () => location.reload(),\n          children: \"Take me there!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PageLayout;","map":{"version":3,"sources":["/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/src/components/local/services/feedback/PageLayout.tsx"],"names":["useState","message","Result","DOMAIN_URL","console","log","Feedback","SC","submitFeedback","router","cryptData","Header","companyInfo","c_logo","c_name","FeedbackDescription","feedbackInfo","survey","submitedStat","questions","setQuestions","q_format","JSON","parse","f_questionEditor_cust","uuid","type","value","option","setAnswered","result","fc","f_questionEditor","userData","setUserData","name","email","startTime","setStartTime","answered","handleSubmit","handleFeedbackSubmit","c","ct","f","query","c_id","fc_id","fdq_id","endTime","Date","getTime","time","sec","Math","floor","formData","FormData","append","stringify","res","setIsSubmitted","err","response","data","error","title","description","isSurveyClicked","e","preventDefault","setIsSurveyClicked","s","target","PageLayout","feedbackContent","isSubmitted","location","reload"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { message, Result } from \"antd\";\nimport Link from \"next/link\";\n\n// config\nimport { DOMAIN_URL } from \"../../../../../config/index\";\n\nconsole.log(\"DOMAIN URL\", DOMAIN_URL);\n\n// components\nimport Feedback from \"../feedback/components/Feedback\";\n\n// utils\nimport { SC } from \"./utils\";\nimport { submitFeedback } from \"../../../../utils/Apicalls\";\nimport router from \"next/router\";\nimport { cryptData } from \"../../../../utils/utils\";\n\nconst Header = ({ companyInfo }: any) => {\n  return (\n    <>\n      <header>\n        <div className=\"d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom\">\n          <a\n            href=\"/\"\n            className=\"d-flex align-items-center text-dark text-decoration-none\"\n          >\n            <img className=\"logo-size\" src={companyInfo?.c_logo} />\n            &nbsp;&nbsp;\n            <span className=\"fs-4\">\n              {companyInfo?.c_name} - Feedback Surveys\n            </span>\n          </a>\n        </div>\n      </header>\n      {/* <div className=\"p-5 mb-4 bg-soft-primary rounded-3 shadow-lg\">\n                <div className=\"container-fluid py-5\">\n                    <h1 className=\"display-5 fw-bold\">About Us</h1>\n                    <p\n                        className=\"col-md-8 fs-4\"\n                        dangerouslySetInnerHTML={{\n                            __html: companyInfo?.c_description,\n                        }}\n                    />\n                    <button className=\"btn btn-primary btn-lg\" type=\"button\">\n                        View all surveys\n                    </button>\n                </div>\n            </div> */}\n    </>\n  );\n};\n\nconst FeedbackDescription = ({ feedbackInfo, survey, submitedStat }: any) => {\n  const [questions, setQuestions] = useState<any>(\n    typeof feedbackInfo.q_format !== \"undefined\" && feedbackInfo.q_format !== \"\"\n      ? JSON.parse(feedbackInfo.q_format)\n      : []\n  );\n\n  const f_questionEditor_cust = (\n    uuid: string,\n    type: string,\n    value: string,\n    option: string\n  ) => {\n    if (value) {\n      setAnswered(true);\n    } else {\n      setAnswered(false);\n    }\n\n    console.log(uuid, type, value, questions, option);\n    const result = SC.fc.f_questionEditor(uuid, type, value, questions, option);\n\n    setQuestions(result);\n  };\n  const [userData, setUserData] = useState<{ name: string; email: string }>({\n    name: \"\",\n    email: \"\",\n  });\n  const [startTime, setStartTime] = useState<any>(null);\n  const [answered, setAnswered] = useState<boolean>(false);\n\n  const handleSubmit = () => {\n    const handleFeedbackSubmit = async () => {\n      const { c, ct, f } = router.query;\n      const c_id = await cryptData(\"dec\", c);\n      const fc_id = await cryptData(\"dec\", ct);\n      const fdq_id = await cryptData(\"dec\", f);\n      const endTime = new Date().getTime();\n      const time = endTime - startTime;\n      let sec = Math.floor((time / 1000) % 60);\n      // console.log(\"Time taken\", sec);\n      const formData = new FormData();\n      formData.append(\"c_id\", c_id);\n      formData.append(\"fc_id\", fc_id);\n      formData.append(\"fdq_id\", fdq_id);\n      formData.append(\"fdqa_time_taken_to_finish\", JSON.stringify(sec));\n      formData.append(\"fdqa_qst_ans_json_format\", JSON.stringify(questions));\n      formData.append(\"name\", userData?.name);\n      formData.append(\"email\", userData?.email);\n\n      console.log(formData);\n\n      try {\n        const res = await submitFeedback(formData);\n        console.log(\"RES\", res);\n        //     {\n        //     c_id: parseInt(c_id),\n        //     fc_id: parseInt(fc_id),\n        //     fdq_id: parseInt(fdq_id),\n        // name: userData?.name,\n        // email: userData?.email,\n        //     fdqa_time_taken_to_finish: sec,\n        //     fdqa_qst_ans_json_format: questions,\n        // }\n        submitedStat.setIsSubmitted(true);\n      } catch (err) {\n        err.response.data?.message?.email &&\n          message.error(err.response.data?.message?.email[0]);\n\n        err.response.data?.message?.name &&\n          message.error(err.response.data?.message?.name[0]);\n      }\n    };\n\n    handleFeedbackSubmit();\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid py-5\">\n        <h1 className=\"display-5 fw-bold\">{feedbackInfo?.title}</h1>\n        <p className=\"col-md-8 fs-4\">{feedbackInfo?.description}</p>\n\n        {!survey.isSurveyClicked ? (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault;\n              console.log(\"take survey\");\n              setStartTime(new Date().getTime());\n              survey.setIsSurveyClicked(true);\n            }}\n          >\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"inputUserName\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputUserName\"\n                aria-describedby=\"input-user-name\"\n                placeholder=\"Enter name\"\n                required\n                onChange={(e) =>\n                  setUserData((s) => ({\n                    ...s,\n                    name: e.target.value,\n                  }))\n                }\n              />\n            </div>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"inputUserEmail\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"inputUserEmail\"\n                aria-describedby=\"input-user-email\"\n                placeholder=\"Enter email\"\n                // required\n                onChange={(e) =>\n                  setUserData((s) => ({\n                    ...s,\n                    email: e.target.value,\n                  }))\n                }\n              />\n            </div>\n            <button className=\"btn btn-primary btn-lg\" type=\"submit\">\n              Take Survey\n            </button>\n          </form>\n        ) : (\n          <></>\n          // <button\n          //     onClick={() => {\n          //         console.log(\"cancel survey\");\n          //         survey.setIsSurveyClicked(false);\n          //     }}\n          //     className=\"btn btn-danger btn-lg\"\n          //     type=\"button\"\n          // >\n          //     Cancel Survey\n          // </button>\n        )}\n      </div>\n      {survey.isSurveyClicked && (\n        <div className=\"container-fluid py-5\">\n          <Feedback\n            setQuestions={setQuestions}\n            answered={answered}\n            setAnswered={setAnswered}\n            questions={questions}\n            f_questionEditor_cust={f_questionEditor_cust}\n            handleSubmit={handleSubmit}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst PageLayout = ({ feedbackContent, survey }: any) => {\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n  return (\n    <div className=\"container py-4\">\n      <Header companyInfo={feedbackContent?.companyInfo} />\n      <div className=\"p-5 mb-4 rounded-3 shadow-lg\">\n        {!isSubmitted ? (\n          <FeedbackDescription\n            feedbackInfo={feedbackContent?.feedbackInfo}\n            survey={survey}\n            submitedStat={{\n              isSubmitted,\n              setIsSubmitted,\n            }}\n          />\n        ) : (\n          <Result\n            status=\"success\"\n            title=\"Feedback has been Successfully Submitted!\"\n            subTitle=\"Thanks for completing this Feedback. Now create your own — it's free, easy, & beautiful\"\n            extra={\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => location.reload()}\n              >\n                Take me there!\n              </button>\n            }\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PageLayout;\n"]},"metadata":{},"sourceType":"module"}