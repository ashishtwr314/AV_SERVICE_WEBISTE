{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { Row, Col, Typography, Radio, Checkbox, Input, Space, Divider, Rate, Slider, Steps } from \"antd\";\nimport { SoundFilled, FrownOutlined, MehOutlined, SmileOutlined, LikeOutlined, DislikeOutlined, QuestionOutlined } from \"@ant-design/icons\"; // utils\n\nimport { convertArrToStr, convertStrToArrString } from \"../../../../../../src/utils/utils\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nconst {\n  Step\n} = Steps;\nconst {\n  Paragraph\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nconst SingleQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  console.log(item);\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Radio.Group, {\n            name: \"singleQuest\",\n            size: \"large\",\n            defaultValue: item.given_answer,\n            onChange: e => {\n              f_questionEditor_cust(item.uuid, item.type, e.target.value, \"given_answer\");\n            },\n            children: /*#__PURE__*/_jsxs(Space, {\n              direction: \"vertical\",\n              children: [/*#__PURE__*/_jsx(Radio, {\n                value: \"a\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"a. \", item.a.a]\n                })\n              }), /*#__PURE__*/_jsx(Radio, {\n                value: \"b\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"b. \", item.a.b]\n                })\n              }), /*#__PURE__*/_jsx(Radio, {\n                value: \"c\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"c. \", item.a.c]\n                })\n              }), /*#__PURE__*/_jsx(Radio, {\n                value: \"d\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"d. \", item.a.d]\n                })\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst MultipleQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  const isChecked = (option, allSelectedOptions) => {\n    if (allSelectedOptions === \"\") return false;\n    const selectedOptionsArray = convertStrToArrString(allSelectedOptions);\n\n    if (selectedOptionsArray.includes(option)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleChange = (isCheckedOption, option, existingAns) => {\n    let existingAnsConvrtArr = [];\n    if (existingAns !== \"\") existingAnsConvrtArr = convertStrToArrString(existingAns);\n\n    if (isCheckedOption) {\n      if (existingAnsConvrtArr && !existingAnsConvrtArr.includes(option)) {\n        const tmp = existingAnsConvrtArr;\n        tmp.push(option);\n        f_questionEditor_cust(item.uuid, item.type, convertArrToStr(tmp), \"given_answer\");\n      }\n    } else if (!isCheckedOption) {\n      if (existingAnsConvrtArr && existingAnsConvrtArr.includes(option)) {\n        let tmp = existingAnsConvrtArr;\n        tmp = tmp.filter(optionTmp => optionTmp !== option);\n        f_questionEditor_cust(item.uuid, item.type, convertArrToStr(tmp), \"given_answer\");\n      }\n    }\n  };\n\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxs(Space, {\n            direction: \"vertical\",\n            children: [/*#__PURE__*/_jsx(Checkbox, {\n              checked: isChecked(\"a\", item.given_answer),\n              onChange: e => {\n                handleChange(e.target.checked, \"a\", item.given_answer);\n              },\n              children: /*#__PURE__*/_jsxs(\"h6\", {\n                children: [\"a. \", item.a.a]\n              })\n            }), /*#__PURE__*/_jsx(Checkbox, {\n              checked: isChecked(\"b\", item.given_answer),\n              onChange: e => {\n                handleChange(e.target.checked, \"b\", item.given_answer);\n              },\n              children: /*#__PURE__*/_jsxs(\"h6\", {\n                children: [\"b. \", item.a.b]\n              })\n            }), /*#__PURE__*/_jsx(Checkbox, {\n              checked: isChecked(\"c\", item.given_answer),\n              onChange: e => {\n                handleChange(e.target.checked, \"c\", item.given_answer);\n              },\n              children: /*#__PURE__*/_jsxs(\"h6\", {\n                children: [\"c. \", item.a.c]\n              })\n            }), /*#__PURE__*/_jsx(Checkbox, {\n              checked: isChecked(\"d\", item.given_answer),\n              onChange: e => {\n                handleChange(e.target.checked, \"d\", item.given_answer);\n              },\n              children: /*#__PURE__*/_jsxs(\"h6\", {\n                children: [\"d. \", item.a.d]\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst BooleanQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Radio.Group, {\n            name: \"booleanQuest\",\n            size: \"large\",\n            defaultValue: item.given_answer,\n            onChange: e => {\n              f_questionEditor_cust(item.uuid, item.type, e.target.value, \"given_answer\");\n            },\n            children: /*#__PURE__*/_jsxs(Space, {\n              direction: \"vertical\",\n              children: [/*#__PURE__*/_jsx(Radio, {\n                value: \"a\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"a. \", item.a.a]\n                })\n              }), /*#__PURE__*/_jsx(Radio, {\n                value: \"b\",\n                children: /*#__PURE__*/_jsxs(\"h6\", {\n                  children: [\"b. \", item.a.b]\n                })\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst CommentQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(TextArea, {\n            size: \"large\",\n            rows: 4,\n            showCount: true,\n            maxLength: 100,\n            value: item.given_answer,\n            onChange: e => {\n              f_questionEditor_cust(item.uuid, item.type, e.target.value, \"given_answer\");\n            }\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst NpsQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const npsRating = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Radio.Group, {\n            name: \"npsQuest\",\n            size: \"large\",\n            defaultValue: item.given_answer,\n            onChange: e => {\n              f_questionEditor_cust(item.uuid, item.type, e.target.value, \"given_answer\");\n            },\n            children: npsRating && npsRating.map((rate, index) => /*#__PURE__*/_jsx(Radio.Button, {\n              value: rate,\n              children: rate\n            }, index.toString()))\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst StarRatingQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(\"h6\", {\n            children: /*#__PURE__*/_jsx(Rate, {\n              defaultValue: item.given_answer,\n              onChange: value => {\n                f_questionEditor_cust(item.uuid, item.type, value, \"given_answer\");\n              }\n            }, item.uuid)\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst EmojiRatingQuestion = ({\n  item,\n  f_questionEditor_cust,\n  active,\n  setActive\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  const Rating1 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE21\"\n  });\n\n  const Rating2 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE41\"\n  });\n\n  const Rating3 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE10\"\n  });\n\n  const Rating4 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE0A\"\n  });\n\n  const Rating5 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE0D\"\n  });\n\n  const {\n    0: hoverActive,\n    1: setHoverActive\n  } = useState(null);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  const activeIcons = {\n    1: /*#__PURE__*/_jsx(Rating1, {}),\n    2: /*#__PURE__*/_jsx(Rating2, {}),\n    3: /*#__PURE__*/_jsx(Rating3, {}),\n    4: /*#__PURE__*/_jsx(Rating4, {}),\n    5: /*#__PURE__*/_jsx(Rating5, {})\n  };\n  const customIcons = {\n    1: /*#__PURE__*/_jsx(FrownOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    2: /*#__PURE__*/_jsx(FrownOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    3: /*#__PURE__*/_jsx(MehOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    4: /*#__PURE__*/_jsx(SmileOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    5: /*#__PURE__*/_jsx(SmileOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    })\n  };\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(\"h6\", {\n            children: /*#__PURE__*/_jsx(Rate, {\n              defaultValue: item.given_answer,\n              character: ({\n                index\n              }) => hoverActive == index + 1 || active == index + 1 ? activeIcons[index + 1] : customIcons[index + 1],\n              onHoverChange: index => setHoverActive(index),\n              onChange: value => {\n                setActive(value);\n                f_questionEditor_cust(item.uuid, item.type, value, \"given_answer\");\n              }\n            }, item.uuid)\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst SliderQuestion = ({\n  item,\n  f_questionEditor_cust\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n  const marks = {\n    0: {\n      label: /*#__PURE__*/_jsx(\"h6\", {\n        children: \"0\"\n      })\n    },\n    5: {\n      label: /*#__PURE__*/_jsx(\"h6\", {\n        children: \"5\"\n      })\n    },\n    10: {\n      label: /*#__PURE__*/_jsx(\"h6\", {\n        children: \"10\"\n      })\n    }\n  };\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Slider, {\n            marks: marks,\n            defaultValue: item.given_answer,\n            max: 10,\n            onChange: value => {\n              f_questionEditor_cust(item.uuid, item.type, value, \"given_answer\");\n            }\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst ThumbsUpQuestion = ({\n  item,\n  f_questionEditor_cust,\n  active,\n  setActive\n}) => {\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(new Audio(item.audio));\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  const Rating1 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDC4D\"\n  });\n\n  const Rating2 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDC4E\"\n  });\n\n  const Rating3 = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    children: \"\\uD83D\\uDE44\"\n  });\n\n  const {\n    0: hoverActive,\n    1: setHoverActive\n  } = useState(null);\n  const {\n    speak,\n    voices\n  } = useSpeechSynthesis();\n  const voice = voices.filter(x => x.lang == \"hi-IN\")[1];\n  const activeIcons = {\n    1: /*#__PURE__*/_jsx(Rating1, {}),\n    2: /*#__PURE__*/_jsx(Rating2, {}),\n    3: /*#__PURE__*/_jsx(Rating3, {})\n  };\n  const customIcons = {\n    1: /*#__PURE__*/_jsx(LikeOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    2: /*#__PURE__*/_jsx(DislikeOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    }),\n    3: /*#__PURE__*/_jsx(QuestionOutlined, {\n      style: {\n        color: \"#b4b4b440\",\n        fontSize: \"2.05rem\"\n      }\n    })\n  };\n  return /*#__PURE__*/_jsx(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    children: /*#__PURE__*/_jsx(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(Row, {\n            gutter: {\n              xs: 8,\n              sm: 16,\n              md: 24,\n              lg: 32\n            },\n            children: /*#__PURE__*/_jsx(Col, {\n              xs: {\n                span: 24\n              },\n              sm: {\n                span: 24\n              },\n              md: {\n                span: 16\n              },\n              lg: {\n                span: 16\n              },\n              xl: {\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxs(\"h4\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxs(\"span\", {\n                  children: [\" \", item.qno, \".\\xA0\", item.q]\n                }), /*#__PURE__*/_jsx(\"audio\", {\n                  style: {\n                    marginLeft: \"2px\"\n                  },\n                  controls: true,\n                  children: /*#__PURE__*/_jsx(\"source\", {\n                    src: item.audio\n                  })\n                }), /*#__PURE__*/_jsx(SoundFilled, {\n                  onClick: () => {\n                    speak({\n                      text: `${item.qno}. ${item.q}`,\n                      voice\n                    }); // isPlaying ? audio.pause() : audio.play();\n                    // setIsPlaying((prev) => !prev);\n                  },\n                  style: {\n                    color: \"#000\",\n                    cursor: \"pointer\",\n                    marginLeft: \"10px\"\n                  }\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsx(\"h6\", {\n            children: /*#__PURE__*/_jsx(Rate, {\n              defaultValue: item.given_answer,\n              character: ({\n                index\n              }) => hoverActive == index + 1 || active == index + 1 ? activeIcons[index + 1] : customIcons[index + 1],\n              onHoverChange: index => setHoverActive(index),\n              onChange: value => {\n                console.log(value);\n                setActive(value);\n                f_questionEditor_cust(item.uuid, item.type, value, \"given_answer\");\n              }\n            }, item.uuid)\n          })\n        })]\n      })\n    })\n  });\n};\n\nconst Feedback = ({\n  questions,\n  f_questionEditor_cust,\n  handleSubmit,\n  answered,\n  setAnswered,\n  setQuestions\n}) => {\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(0);\n  const {\n    0: active,\n    1: setActive\n  } = useState(0);\n\n  const next = () => {\n    setAnswered(false);\n    setCurrent(curr => curr + 1);\n  };\n\n  const prev = () => {\n    setCurrent(curr => curr - 1);\n  };\n\n  useEffect(() => {\n    const {\n      given_answer\n    } = questions[current];\n    setActive(given_answer);\n\n    if (given_answer) {\n      setAnswered(true);\n    } else {\n      setAnswered(false);\n    } // const questionsCopy = JSON.parse(JSON.stringify(questions));\n    // console.log(questionsCopy[current])\n    // questionsCopy[current] = {\n    //     ...questionsCopy[current],\n    //     given_answer: 0,\n    // }\n    // console.log(questionsCopy)\n    // setQuestions(questionsCopy)\n\n  }, [current]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"steps-content\",\n      children: questions[current] && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [questions[current].type === \"single\" && /*#__PURE__*/_jsx(SingleQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"multiple\" && /*#__PURE__*/_jsx(MultipleQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"boolean\" && /*#__PURE__*/_jsx(BooleanQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"comment\" && /*#__PURE__*/_jsx(CommentQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"nps\" && /*#__PURE__*/_jsx(NpsQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"star_rating\" && /*#__PURE__*/_jsx(StarRatingQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"emoji_rating\" && /*#__PURE__*/_jsx(EmojiRatingQuestion, {\n          active: active,\n          setActive: setActive,\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"text_slider\" && /*#__PURE__*/_jsx(SliderQuestion, {\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        }), questions[current].type === \"thumbs_up_emoji\" && /*#__PURE__*/_jsx(ThumbsUpQuestion, {\n          active: active,\n          setActive: setActive,\n          item: questions[current],\n          f_questionEditor_cust: f_questionEditor_cust\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"steps-action\",\n      children: [current > 0 && /*#__PURE__*/_jsx(\"button\", {\n        style: {\n          margin: \"0 8px\"\n        },\n        onClick: prev,\n        className: \"btn btn-primary\",\n        type: \"button\",\n        children: \"Previous\"\n      }), current === questions.length - 1 && /*#__PURE__*/_jsx(\"button\", {\n        onClick: () => {\n          console.log(questions);\n          handleSubmit(); // submitedStat.setIsSubmitted(true);\n        },\n        disabled: !answered,\n        className: \"btn btn-success\",\n        type: \"button\",\n        children: \"Finish\"\n      }), current < questions.length - 1 && /*#__PURE__*/_jsx(\"button\", {\n        onClick: next,\n        disabled: !answered,\n        className: \"btn btn-primary\",\n        type: \"button\",\n        children: \"Next\"\n      })]\n    })]\n  });\n};\n\nexport default Feedback;","map":null,"metadata":{},"sourceType":"module"}