{"ast":null,"code":"/**\n * Question Editor function\n * @return List\n * @param uuid, type, value, option\n * @function Callback\n */\nconst f_questionEditor = (uuid, type, value, passedQuestions, option = null) => {\n  const tmpQuestions = passedQuestions;\n  const newQuestions = [];\n\n  if (type === \"multiple\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"a\") {\n          item.a.a = value;\n        } else if (option === \"b\") {\n          item.a.b = value;\n        } else if (option === \"c\") {\n          item.a.c = value;\n        } else if (option === \"d\") {\n          item.a.d = value;\n        } else if (option === \"d\") {\n          item.a.d = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"single\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"a\") {\n          item.a.a = value;\n        } else if (option === \"b\") {\n          item.a.b = value;\n        } else if (option === \"c\") {\n          item.a.c = value;\n        } else if (option === \"d\") {\n          item.a.d = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"boolean\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"a\") {\n          item.a.a = value;\n        } else if (option === \"b\") {\n          item.a.b = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"comment\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"txt\") {\n          item.a = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"nps\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"star_rating\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"emoji_rating\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"text_slider\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  } else if (type === \"thumbs_up_emoji\") {\n    tmpQuestions.forEach(item => {\n      if (item.uuid === uuid) {\n        if (option === \"question\") {\n          item.q = value;\n        } else if (option === \"given_answer\") {\n          item.given_answer = value;\n        }\n      }\n\n      newQuestions.push(item);\n    });\n    return newQuestions;\n  }\n};\n/**\n * Dynamic Feedback Creation Config -- short form fc\n * Declare common question templates to be used\n */\n\n\nconst fc = {\n  f_questionEditor\n};\n/**\n * Sidebar Config -- short form SC\n */\n\nexport const SC = {\n  fc\n};","map":null,"metadata":{},"sourceType":"module"}