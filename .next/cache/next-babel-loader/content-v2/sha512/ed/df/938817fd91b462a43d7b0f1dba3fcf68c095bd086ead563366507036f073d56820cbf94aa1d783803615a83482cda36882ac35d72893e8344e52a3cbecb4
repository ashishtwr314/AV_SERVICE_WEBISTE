{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kings/Downloads/AV SERVICE WEBSITE/AV_SERVICE_WEBISTE_FULL/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\"; // components\n\nimport PageLoader from \"../../../src/components/global/PageLoader\";\nimport PageLayout from \"../../../src/components/local/services/feedback/PageLayout\"; // API Calls\n\nimport { fetchFeedbackById } from \"../../../src/utils/Apicalls\"; // utils\n\nimport { cryptData } from \"../../../src/utils/utils\";\n\nvar Feedback = function Feedback() {\n  var router = useRouter();\n\n  var _useState = useState(true),\n      isPageLoad = _useState[0],\n      setIsPageLoad = _useState[1];\n\n  var _useState2 = useState(null),\n      feedbackContent = _useState2[0],\n      setFeedbackContent = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSurveyClicked = _useState3[0],\n      setIsSurveyClicked = _useState3[1];\n\n  var getFeedback = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _router$query, c, ct, f, c_id, fc_id, fdq_id;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsPageLoad(true);\n              _router$query = router.query, c = _router$query.c, ct = _router$query.ct, f = _router$query.f;\n              _context.next = 4;\n              return cryptData(\"dec\", c);\n\n            case 4:\n              c_id = _context.sent;\n              _context.next = 7;\n              return cryptData(\"dec\", ct);\n\n            case 7:\n              fc_id = _context.sent;\n              _context.next = 10;\n              return cryptData(\"dec\", f);\n\n            case 10:\n              fdq_id = _context.sent;\n              _context.next = 13;\n              return fetchFeedbackById({\n                c_id: c_id,\n                fc_id: fc_id,\n                fdq_id: fdq_id\n              }).then(function (resp) {\n                console.log(resp);\n                if (resp.status === 200) setFeedbackContent(resp.data);\n              }).then(function () {\n                setIsPageLoad(false);\n              })[\"catch\"](function () {});\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFeedback() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!router.isReady) return;\n    getFeedback();\n  }, [router.isReady]);\n  return isPageLoad ? /*#__PURE__*/_jsx(PageLoader, {\n    typeT: \"Bars\",\n    visibleT: true\n  }) : /*#__PURE__*/_jsx(PageLayout, {\n    feedbackContent: feedbackContent,\n    survey: {\n      isSurveyClicked: isSurveyClicked,\n      setIsSurveyClicked: setIsSurveyClicked\n    }\n  });\n};\n\nexport default Feedback;","map":null,"metadata":{},"sourceType":"module"}